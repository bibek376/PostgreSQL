--SQL Exercises, Practice, Solution - Aggregate Functions


-- 1. From the following table, write a SQL query to calculate total 
-- purchase amount of all orders. Return total purchase amount.


select sum(purch_amt) "Total Purches Amount" from orders o ;


-- 2. From the following table, write a SQL query to calculate average purchase 
-- amount of all orders. Return average purchase amount. 

select * from orders o ;
select avg(purch_amt) from orders o ;

-- 3. From the following table, write a SQL query to count the 
-- number of unique salespeople. Return number of salespeople.
select * from orders o ;
select count(distinct(salesman_id)) from orders o ;


-- 4. From the following table, write a SQL query to count 
-- the number of customers. Return number of customers. 

select * from customer c ;
select count(distinct(customer_id)) from customer c ;


-- 5. From the following table, write a SQL query to find the number of customers 
-- who got at least a gradation for his/her activity

select count(all grade) from customer c ;


-- 6. From the following table, write a SQL query to find the maximum purchase amount. 
select * from orders o ;
select max(purch_amt) from orders o ;

--7. From the following table, write a SQL query to find the minimum purchase amount. 

select * from orders o ;
select min(purch_amt) from orders o ;

-- 8. From the following table, write a SQL query to find the highest grade of the 
-- customers for each of the city. Return city, maximum grade. 

select * from customer c ;

select city,max(grade) from customer c group by city;


-- 9. From the following table, write a SQL query to find the highest 
-- purchase amount ordered by each 
-- customer. Return customer ID, maximum purchase amount. 


select customer_id,max(purch_amt) from orders o 
group by customer_id ;


-- 10. From the following table, write a SQL query to find the highest purchase
-- amount ordered by each customer 
-- on a particular date. Return, order date and highest purchase amount. 

select * from orders o ;

select customer_id,ord_date,max(purch_amt) from orders o 
group by customer_id ,ord_date ;



-- 11. From the following table, write a SQL query to find 
-- the highest purchase amount on '2012-08-17' 
-- by each salesperson. Return salesperson ID, purchase amount. 

select salesman_id,max(purch_amt) from orders o 
where ord_date='2012-08-17'
group by salesman_id ;


-- 12. From the following table, write a SQL query to find highest
-- order (purchase) amount by each customer in a particular order
-- date. Filter the result by highest order (purchase) amount above 2000.00. 
-- Return customer id, order date and maximum purchase amount.  

select customer_id,ord_date,max(purch_amt) from orders o 
where purch_amt >2000 
group by customer_id,ord_date ;


-- 13. From the following table, write a SQL query to find the
-- maximum order (purchase) amount in the range 2000, 6000 
-- (Begin and end values are included.) by combination of each customer and order date. 
-- Return customer id, order date and maximum purchase amount.



select customer_id,ord_date,max(purch_amt) from orders o 
group by customer_id ,ord_date 
having max(purch_amt) between 2000 and 6000;


-- 14. From the following table, write a SQL query 
-- to find the maximum order (purchase) amount by the combination
-- of each customer and order date. Filter the rows for maximum order (purchase) 
-- amount is either 
-- 2000, 3000, 5760, 6000. Return customer id, order date and maximum purchase amount.

select * from orders o ;

select customer_id,ord_date,max(purch_amt) from orders o  
group by customer_id ,ord_date having max(purch_amt) in (2000,3000,5760,6000);

--OR

select customer_id,ord_date,max(purch_amt) from orders o 
where purch_amt in (2000,3000,5760,6000)
group by customer_id ,ord_date;



-- 15. From the following table, write a SQL query to find the maximum order 
-- (purchase) amount by each customer. The customer ID should be in the range 3002 and 3007
-- (Begin and end values are included.). Return customer id and maximum purchase amount. 

select * from orders o ;
select customer_id,max(purch_amt) from orders o 
group by customer_id 
having customer_id between 3002 and 3007;

-- 16. From the following table, write a SQL query to find the maximum order 
-- (purchase) amount for each customer. The customer ID should be in the range 3002 and 
-- 3007(Begin and end values are included.). Filter the rows for maximum order (purchase)
-- amount is higher than 1000. Return customer id and maximum purchase amount.  

select customer_id,max(purch_amt) from orders o 
where customer_id between 3002 and 3007 
group by customer_id 
having max(purch_amt) >1000;

-- 17. From the following table, write a SQL query to find the maximum order (purchase)
-- amount generated by each salesperson. Filter the rows for the salesperson ID is in
-- the range 5003 and 5008 (Begin and end values are included.). Return salesperson id 
-- and maximum purchase amount. 

select salesman_id,max(purch_amt) from orders o 
where salesman_id between 5003 and 5008
group by salesman_id ;


-- 18. From the following table, write a SQL query to count all the
-- orders generated on '2012-08-17'. Return number of orders.  


select count(ord_no) from orders o 
where ord_date='2012-08-17';


-- 19. From the following table, write a SQL query to count number of salespeople
-- who belongs to a city. Return number of salespeople. 

select * from salesman s ;
select count(*) "No. Of Sales People" from salesman s 
where not(city is null);

-- 20. From the following table, write a SQL query to count number of orders by 
-- the combination of each order date and salesperson. Return order date, salesperson id. 

select salesman_id,ord_date, count(*) from orders o 
group by salesman_id ,ord_date ;


-- 21. From the following table, write a SQL query to calculate the average product price.
-- Return average product price.

select * from item_mast im ;
select avg(pro_price) from item_mast im ;



-- 22. From the following table, write a SQL query to count number of products where
-- product price is higher than or equal to 350. Return number of products.

select count(pro_id) from item_mast im 
where pro_price >=350;

-- 23. From the following table, write a SQL query to compute the average price 
-- for unique companies. Return average price and company id. 

select pro_com,avg(pro_price) from item_mast im 
group by pro_com;


-- 24. From the following table, write a SQL query to compute the sum of the 
-- allotment amount of all departments. Return sum of the allotment amount.

select * from emp_department ed ;

select sum(dpt_allotment) from emp_department ed ;


-- 25. From the following table, write a SQL query to find the number of employees
-- in each department. Return department code and number of employees. 
select * from emp_details ed ;

select emp_dept,count(*) from emp_details ed 
group by emp_dept ;





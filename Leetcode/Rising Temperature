--
--197. Rising Temperature
--
--Table: Weather
--
--+---------------+---------+
--| Column Name   | Type    |
--+---------------+---------+
--| id            | int     |
--| recordDate    | date    |
--| temperature   | int     |
--+---------------+---------+
--id is the primary key for this table.
--This table contains information about the temperature on a certain day.
-- 
--
--Write an SQL query to find all dates' Id with higher temperatures compared to its previous dates (yesterday).
--
--Return the result table in any order.
--
--The query result format is in the following example.
--
-- 
--
--Example 1:
--
--Input: 
--Weather table:
--+----+------------+-------------+
--| id | recordDate | temperature |
--+----+------------+-------------+
--| 1  | 2015-01-01 | 10          |
--| 2  | 2015-01-02 | 25          |
--| 3  | 2015-01-03 | 20          |
--| 4  | 2015-01-04 | 30          |
--+----+------------+-------------+
--Output: 
--+----+
--| id |
--+----+
--| 2  |
--| 4  |
--+----+
--Explanation: 
--In 2015-01-02, the temperature was higher than the previous day (10 -> 25).
--In 2015-01-04, the temperature was higher than the previous day (20 -> 30).

with 
t1 as(select w.*,
	lag(w.temperature) over ()
	from Weather w)
select t1.id from t1
where t1.temperature>t1.lag;

select * from 
(select w.*,
w.recorddate-1 "Prev_day",
lag(w.recorddate) over() "Lag_date",
lag(w.temperature) over() "Lag_temp"
from weather w)tt 
where tt.temperature=10;




with 
t1 as (select w.*,
	w.recorddate-1 "a",
	lag(w.recorddate,1) over()"b" ,
	lag(w.temperature,1) over() "c" 
	from weather w
	order by w.recorddate)
select t1.id "Id" from t1
where t1.a=t1.b
and t1.temperature > t1.c ;

--OR


select w2.id "Id"
from weather w1 --prev day
join weather w2 --curr day
on w2.recorddate -1=w1.recorddate 
and w1.temperature < w2.temperature ;


select w1.id "Id"
from weather w1 --curr day
join weather w2 --prev day
on w1.recorddate -1=w2.recorddate
and w1.temperature > w2.temperature ;






















